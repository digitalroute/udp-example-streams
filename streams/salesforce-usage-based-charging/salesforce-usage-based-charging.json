{
  "schemaVersion": 1,
  "name": "Salesforce Usage Based Charging",
  "nodes": [
    {
      "partitionKey": null,
      "schemaVersion": 1,
      "id": "44d21ed0-2d8a-11eb-99d6-d368bc4e07ad",
      "name": "AWS S3 Input",
      "type": "readers/s3",
      "params": {
        "prefix": "usage_input",
        "fileType": "csv",
        "csv": {
          "delimiter": ",",
          "headers": true
        },
        "keyPatternMatching": false,
        "accessKeyId": "",
        "bucket": "testbucket",
        "key": "usage_input/UDPUsageData.csv"
      },
      "x": 350,
      "y": 50
    },
    {
      "partitionKey": null,
      "schemaVersion": 1,
      "id": "c7f77c50-2e62-11eb-ad25-5b946196bfd1",
      "name": "Normalize",
      "type": "transforms/map",
      "params": {
        "mappings": {
          "usageRecordType": "Usage Record Type",
          "serverID": "Server ID",
          "accountNumber": "Account Num",
          "quantity": "Quantity",
          "unitOfMeasure": "UOM",
          "startTime": "Start Date-Time"
        }
      },
      "x": 700,
      "y": 50
    },
    {
      "partitionKey": null,
      "schemaVersion": 4,
      "id": "8e9a19d1-2e4f-11eb-ad25-5b946196bfd1",
      "name": "Deduplicate",
      "type": "transforms/deduplicate",
      "params": {
        "multiOutput": {
          "fixed": {
            "unique": {
              "id": "8e9a19d0-2e4f-11eb-ad25-5b946196bfd1"
            },
            "duplicates": {
              "id": "8e9a19d1-2e4f-11eb-ad25-5b946196bfd1"
            }
          }
        },
        "key": "${payload}"
      },
      "x": 500,
      "y": 50
    },
    {
      "partitionKey": null,
      "schemaVersion": 2,
      "id": "39574560-7099-11eb-a86a-cd9d8acf456b",
      "name": "Salesforce Query",
      "type": "transforms/salesforce_query",
      "params": {
        "clientId": "",
        "username": "",
        "query": "SELECT SBQQ__OrderItem__r.Order.Account.Id, SBQQ__OrderItem__r.Order.Account.Name, \r\nSBQQ__OrderItem__r.Order.Account.AccountNumber, SBQQ__OrderItem__r.Order.Name, \r\nSBQQ__OrderItem__r.Order.OrderNumber, SBQQ__OrderItem__r.OrderItemNumber, \r\nSBQQ__OrderItem__r.Product2.ProductCode, SBQQ__MatchingAttribute__c, \r\nSBQQ__UnitOfMeasure__c \r\nFROM SBQQ__OrderItemConsumptionSchedule__c \r\nWHERE SBQQ__OrderItem__r.Order.Account.AccountNumber = '${payload.accountNumber}'",
        "resultKey": "soqlResult",
        "cache": {
          "maxCacheItems": 100,
          "maxCacheSeconds": 300
        }
      },
      "x": 1100,
      "y": 50
    },
    {
      "partitionKey": null,
      "schemaVersion": 1,
      "id": "d82c2530-7156-11eb-9c1b-0721cf25dea0",
      "name": "Enrichment",
      "type": "transforms/script",
      "params": {
        "transform": "/*****************************************\r\n*\r\n*  QueryResults.js\r\n*\r\n*****************************************/\r\n\r\n{\r\n  /*****************************************\r\n  *\r\n  *  product\r\n  *\r\n  *****************************************/\r\n\r\n  let productCode = \"SAAS\";\r\n\r\n  /*****************************************\r\n  *\r\n  *  soqlResult\r\n  *\r\n  *****************************************/\r\n\r\n  let soqlResult = payload.soqlResult;\r\n  delete payload.soqlResult;\r\n\r\n  /*****************************************\r\n  *\r\n  *  search\r\n  *\r\n  *****************************************/\r\n  \r\n  let accountID = null;\r\n  let accountName = null;\r\n  let matchingOrderProductNumber = null;\r\n  let requiredUnitOfMeasure = null;\r\n  for (var i = 0; i < soqlResult.records.length; i += 1)\r\n    {\r\n      /*****************************************\r\n      *\r\n      *  parse\r\n      *\r\n      *****************************************/\r\n\r\n      let orderProductConsumptionSchedule = soqlResult.records[i];\r\n      let orderProduct = orderProductConsumptionSchedule.SBQQ__OrderItem__r;\r\n      let order = orderProduct.Order;\r\n      let account = order.Account;\r\n      let product = orderProduct.Product2;\r\n\r\n      /*****************************************\r\n      *\r\n      *  filter\r\n      *\r\n      *****************************************/\r\n\r\n      if (product.ProductCode == productCode && orderProductConsumptionSchedule.SBQQ__MatchingAttribute__c == payload.usageRecordType)\r\n        {\r\n          accountID = account.Id;\r\n          accountName = account.Name;\r\n          matchingOrderProductNumber = orderProduct.OrderItemNumber;\r\n          requiredUnitOfMeasure = orderProductConsumptionSchedule.SBQQ__UnitOfMeasure__c; \r\n        }\r\n    }\r\n\r\n  /*****************************************\r\n  *\r\n  *  result\r\n  *\r\n  *****************************************/\r\n\r\n  payload.accountID = accountID;\r\n  payload.accountName = accountName;\r\n  payload.matchingOrderProductNumber = matchingOrderProductNumber;\r\n  payload.requiredUnitOfMeasure = requiredUnitOfMeasure;\r\n  await push(payload);\r\n}\r\n"
      },
      "x": 1300,
      "y": 50
    },
    {
      "partitionKey": null,
      "schemaVersion": 1,
      "id": "4346e8f0-71fc-11eb-956d-b1870402268a",
      "name": "Normalize Units",
      "type": "transforms/script",
      "params": {
        "transform": "/*****************************************\r\n*\r\n*  NormalizeUnits.js\r\n*\r\n*****************************************/\r\n\r\n{\r\n  if (payload.unitOfMeasure != payload.requiredUnitOfMeasure)\r\n    {\r\n      switch (payload.unitOfMeasure)\r\n        {\r\n          /*****************************************\r\n          *\r\n          *  time\r\n          *\r\n          *****************************************/\r\n\r\n          //\r\n          //  time:  seconds\r\n          //\r\n\r\n          case \"Seconds\":\r\n            switch (payload.requiredUnitOfMeasure)\r\n              {\r\n                case \"Minutes\": { payload.unitOfMeasure = payload.requiredUnitOfMeasure; payload.quantity = payload.quantity / 60.0; break; }\r\n                case \"Hours\": { payload.unitOfMeasure = payload.requiredUnitOfMeasure; payload.quantity = payload.quantity / 3600.0; break; }\r\n              }\r\n            break;\r\n\r\n          //\r\n          //  time:  minutes\r\n          //\r\n\r\n          case \"Minutes\":\r\n            switch (payload.requiredUnitOfMeasure)\r\n              {\r\n                case \"Seconds\": { payload.unitOfMeasure = payload.requiredUnitOfMeasure; payload.quantity = payload.quantity * 60.0; break; }\r\n                case \"Hours\": { payload.unitOfMeasure = payload.requiredUnitOfMeasure; payload.quantity = payload.quantity / 60.0; break; }\r\n              }\r\n            break;\r\n\r\n          //\r\n          //  time:  hours\r\n          //\r\n\r\n          case \"Hours\":\r\n            switch (payload.requiredUnitOfMeasure)\r\n              {\r\n                case \"Seconds\": { payload.unitOfMeasure = payload.requiredUnitOfMeasure; payload.quantity = payload.quantity * 3600.0; break; }\r\n                case \"Minutes\": { payload.unitOfMeasure = payload.requiredUnitOfMeasure; payload.quantity = payload.quantity * 60.0; break; }\r\n              }\r\n            break;\r\n            \r\n          /*****************************************\r\n          *\r\n          *  space\r\n          *\r\n          *****************************************/\r\n\r\n          //\r\n          //  space: MB\r\n          //\r\n\r\n          case \"MB\":\r\n            switch (payload.requiredUnitOfMeasure)\r\n              {\r\n                case \"GB\": { payload.unitOfMeasure = payload.requiredUnitOfMeasure; payload.quantity = payload.quantity / 1024.0; break; }\r\n              }\r\n            break;\r\n            \r\n          //\r\n          //  space: GB\r\n          //\r\n\r\n          case \"GB\":\r\n            switch (payload.requiredUnitOfMeasure)\r\n              {\r\n                case \"MB\": { payload.unitOfMeasure = payload.requiredUnitOfMeasure; payload.quantity = payload.quantity * 1024.0; break; }\r\n              }\r\n            break;\r\n            \r\n        }\r\n    }\r\n\r\n  /*****************************************\r\n  *\r\n  *  result\r\n  *\r\n  *****************************************/\r\n\r\n  await(push(payload));\r\n}\r\n"
      },
      "x": 500,
      "y": 350
    },
    {
      "partitionKey": null,
      "schemaVersion": 1,
      "id": "64355550-7202-11eb-956d-b1870402268a",
      "name": "Invoice Aggregation",
      "type": "transforms/data_aggregate",
      "params": {
        "flushType": "EACH_FILE",
        "operations": [
          {
            "field": "quantity",
            "type": "NUMERIC_SUM"
          }
        ],
        "groupKeys": [
          {
            "field": "startTime",
            "operationType": "DAY"
          },
          {
            "field": "accountID",
            "operationType": "NONE"
          },
          {
            "field": "accountName",
            "operationType": "NONE"
          },
          {
            "field": "accountNumber",
            "operationType": "NONE"
          },
          {
            "field": "matchingOrderProductNumber",
            "operationType": "NONE"
          },
          {
            "field": "usageRecordType",
            "operationType": "NONE"
          },
          {
            "field": "unitOfMeasure",
            "operationType": "NONE"
          }
        ]
      },
      "x": 700,
      "y": 350
    },
    {
      "partitionKey": null,
      "schemaVersion": 1,
      "id": "8b569160-7218-11eb-9bdc-eda7125537b1",
      "name": "Salesforce Bulk Upload",
      "type": "transforms/salesforce_bulk",
      "params": {
        "objectType": "usageObject",
        "object": "blng__Usage__c",
        "maxWaitTimeoutSeconds": 60,
        "clientId": "",
        "username": "",
        "fieldMappings": {
          "blng__StartDateTime__c": "usageDay",
          "blng__EndDateTime__c": "usageDay",
          "blng__MatchingId__c": "matchingOrderProductNumber",
          "blng__MatchingAttribute__c": "usageRecordType",
          "blng__Quantity__c": "quantity",
          "blng__UnitOfMeasure__c": "unitOfMeasure"
        }
      },
      "x": 1100,
      "y": 350
    },
    {
      "partitionKey": null,
      "schemaVersion": 1,
      "id": "dcc05aa0-2dbb-11eb-8666-95024d07ecef",
      "name": "Validate Upstream",
      "type": "transforms/validate",
      "params": {
        "schema": {
          "required": [
            "usageRecordType",
            "serverID",
            "accountNumber",
            "quantity",
            "unitOfMeasure",
            "startTime"
          ],
          "properties": {
            "usageRecordType": {
              "type": "string",
              "enum": [
                "Platform Usage",
                "Key Management",
                "Storage",
                "Compute Service",
                "API Service"
              ]
            },
            "quantity": {
              "type": "number",
              "minimum": 10
            },
            "unitOfMeasure": {
              "type": "string",
              "enum": [
                "Seconds",
                "Key",
                "MB",
                "Compute Hour",
                "Request"
              ]
            },
            "startTime": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "suspenseManagement": {
          "enabled": true,
          "resetOnValidEvent": true,
          "eventThreshold": 100,
          "onThresholdExceeded": "ABORT"
        }
      },
      "x": 900,
      "y": 50
    },
    {
      "partitionKey": null,
      "schemaVersion": 1,
      "id": "8ff1c130-859c-11eb-86a1-1503d5c5068d",
      "name": "Audit Log",
      "type": "writers/log",
      "params": {},
      "x": 1300,
      "y": 350
    },
    {
      "partitionKey": null,
      "schemaVersion": 1,
      "id": "20b77280-8649-11eb-9ad1-493553a7503e",
      "name": "Cache Deduplicate",
      "type": "transforms/script",
      "params": {
        "transform": "// Cache duplicated records from all files in memory\n// and flush it at the end of execution - refer flush section\n\nstate.node.recordBatch = state.node.recordBatch || [];\nawait state.node.recordBatch.push(payload);",
        "flush": "// Flush all cached records\n\nif (meta.lastCall) {\n    for (var key in state.node.recordBatch) {\n        await push(state.node.recordBatch[key]);    \n    }\n}"
      },
      "x": 700,
      "y": 200
    },
    {
      "partitionKey": null,
      "schemaVersion": 6,
      "id": "9c746360-8649-11eb-9ad1-493553a7503e",
      "name": "AWS S3 Deduplicate",
      "type": "writers/s3",
      "params": {
        "outputMode": "specificFileName",
        "fileType": "csv",
        "useCompression": false,
        "compressionType": "zip",
        "appendTimestamp": true,
        "fileName": "UDPUsageData_deduplicate.csv",
        "csv": {
          "headers": true,
          "delimiter": ","
        },
        "folder": "usage_duplicate",
        "bucket": "testbucket"
      },
      "x": 900,
      "y": 200
    },
    {
      "partitionKey": null,
      "schemaVersion": 3,
      "id": "8a99f811-8664-11eb-b56d-e9c4fbe6d89f",
      "name": "Route",
      "type": "transforms/split",
      "params": {
        "multiOutput": {
          "configurable": {
            "outputs": [
              {
                "id": "8a99f810-8664-11eb-b56d-e9c4fbe6d89f",
                "name": "Enriched"
              },
              {
                "id": "default-8a99f811-8664-11eb-b56d-e9c4fbe6d89f",
                "name": "default"
              }
            ]
          }
        },
        "onNoMatch": "defaultOutput",
        "rules": [
          {
            "key": "${payload.accountID}",
            "value": "null",
            "op": "ne",
            "output": "8a99f810-8664-11eb-b56d-e9c4fbe6d89f"
          }
        ]
      },
      "x": 350,
      "y": 400
    },
    {
      "partitionKey": null,
      "schemaVersion": 6,
      "id": "51237830-8665-11eb-b56d-e9c4fbe6d89f",
      "name": "AWS S3 Not Enrich",
      "type": "writers/s3",
      "params": {
        "outputMode": "specificFileName",
        "fileType": "csv",
        "useCompression": false,
        "compressionType": "zip",
        "appendTimestamp": true,
        "fileName": "UDPUsageData_notenrich.csv",
        "csv": {
          "headers": true,
          "delimiter": ","
        },
        "folder": "usage_notenrich",
        "bucket": "testbucket"
      },
      "x": 500,
      "y": 500
    },
    {
      "partitionKey": null,
      "schemaVersion": 2,
      "id": "161b1840-8667-11eb-b56d-e9c4fbe6d89f",
      "name": "Invoice Mapping",
      "type": "transforms/xmap",
      "params": {
        "keepFields": {
          "enabled": true,
          "except": [
            "day_startTime",
            "sum_quantity"
          ]
        },
        "mappings": [
          {
            "field": "quantity",
            "expression": "sum_quantity",
            "ast": [
              "R",
              "sum_quantity"
            ],
            "errorMessage": null
          },
          {
            "field": "usageDay",
            "expression": "day_startTime + \"T00:00:00.000-0500\"",
            "ast": [
              "aop",
              "+",
              [
                "R",
                "day_startTime"
              ],
              [
                "S",
                "T00:00:00.000-0500"
              ]
            ],
            "errorMessage": null
          }
        ]
      },
      "x": 900,
      "y": 350
    }
  ],
  "edges": [
    {
      "id": "dbb28cd0-7156-11eb-9c1b-0721cf25dea0",
      "from": "39574560-7099-11eb-a86a-cd9d8acf456b",
      "to": "d82c2530-7156-11eb-9c1b-0721cf25dea0",
      "config": {}
    },
    {
      "id": "667f1e40-7202-11eb-956d-b1870402268a",
      "from": "4346e8f0-71fc-11eb-956d-b1870402268a",
      "to": "64355550-7202-11eb-956d-b1870402268a",
      "config": {}
    },
    {
      "id": "b1c28600-859c-11eb-86a1-1503d5c5068d",
      "from": "8b569160-7218-11eb-9bdc-eda7125537b1",
      "to": "8ff1c130-859c-11eb-86a1-1503d5c5068d",
      "config": {}
    },
    {
      "id": "239257e0-8649-11eb-9ad1-493553a7503e",
      "from": "8e9a19d1-2e4f-11eb-ad25-5b946196bfd1",
      "output": "8e9a19d1-2e4f-11eb-ad25-5b946196bfd1",
      "to": "20b77280-8649-11eb-9ad1-493553a7503e",
      "config": {}
    },
    {
      "id": "9e064e00-8649-11eb-9ad1-493553a7503e",
      "from": "20b77280-8649-11eb-9ad1-493553a7503e",
      "to": "9c746360-8649-11eb-9ad1-493553a7503e",
      "config": {}
    },
    {
      "id": "eedc4640-8649-11eb-9ad1-493553a7503e",
      "from": "44d21ed0-2d8a-11eb-99d6-d368bc4e07ad",
      "to": "8e9a19d1-2e4f-11eb-ad25-5b946196bfd1",
      "config": {}
    },
    {
      "id": "238bd2c0-864a-11eb-9ad1-493553a7503e",
      "from": "8e9a19d1-2e4f-11eb-ad25-5b946196bfd1",
      "output": "8e9a19d0-2e4f-11eb-ad25-5b946196bfd1",
      "to": "c7f77c50-2e62-11eb-ad25-5b946196bfd1",
      "config": {}
    },
    {
      "id": "24b844d0-864a-11eb-9ad1-493553a7503e",
      "from": "c7f77c50-2e62-11eb-ad25-5b946196bfd1",
      "to": "dcc05aa0-2dbb-11eb-8666-95024d07ecef",
      "config": {}
    },
    {
      "id": "065a4bb0-8662-11eb-b56d-e9c4fbe6d89f",
      "from": "dcc05aa0-2dbb-11eb-8666-95024d07ecef",
      "to": "39574560-7099-11eb-a86a-cd9d8acf456b",
      "config": {}
    },
    {
      "id": "f3f0d3b0-8664-11eb-b56d-e9c4fbe6d89f",
      "from": "d82c2530-7156-11eb-9c1b-0721cf25dea0",
      "to": "8a99f811-8664-11eb-b56d-e9c4fbe6d89f",
      "config": {}
    },
    {
      "id": "54219d00-8665-11eb-b56d-e9c4fbe6d89f",
      "from": "8a99f811-8664-11eb-b56d-e9c4fbe6d89f",
      "output": "default-8a99f811-8664-11eb-b56d-e9c4fbe6d89f",
      "to": "51237830-8665-11eb-b56d-e9c4fbe6d89f",
      "config": {}
    },
    {
      "id": "56f125d0-8667-11eb-b56d-e9c4fbe6d89f",
      "from": "64355550-7202-11eb-956d-b1870402268a",
      "to": "161b1840-8667-11eb-b56d-e9c4fbe6d89f",
      "config": {}
    },
    {
      "id": "1e398920-8668-11eb-b56d-e9c4fbe6d89f",
      "from": "161b1840-8667-11eb-b56d-e9c4fbe6d89f",
      "to": "8b569160-7218-11eb-9bdc-eda7125537b1",
      "config": {}
    },
    {
      "id": "bbd40e10-867e-11eb-ad7c-094377d1f0ae",
      "from": "8a99f811-8664-11eb-b56d-e9c4fbe6d89f",
      "output": "8a99f810-8664-11eb-b56d-e9c4fbe6d89f",
      "to": "4346e8f0-71fc-11eb-956d-b1870402268a",
      "config": {}
    }
  ]
}
